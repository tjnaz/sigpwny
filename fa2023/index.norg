* Week 0: Introduction (2023.08.27)
  /SIGPwny as a club, teaching philosophy, how to get involved, and opportunities/
  
** What is SIGPwny
    *SIG - Special Interest Group* | *Pwn - To hack or own (slang)* | *Y   - For cool logo*
    - About us
    -- Computer security / hacking club at UIUC
    -- Largest Special Interest Group within ACM@UIUC

** Who is SIGPwny
    - a bunch of people

** Why join SIGPwny
*** Why computer security?
     -- Massive growing industry
     -- Cybersecurity is relevant in all areas and computing
     - Red teaming
     - Blue teaming
*** How to join
     - Discord
*** What we will do and won't do
**** You will
     - Learn how to think with an adversarial mindset
     - Learn how to look for vulnerabilities in systems
     - Explore the subcategories of security
     - Develop practical security skills
     - Find a community of friends and collegues
**** You won't
    - Hack your friend's accounts
     - Be a 1337 hax0r (praise anonymous!!1!!)
     - Break into computers without explicit permission
     - Learn how to hack overnight
**** Teaching philosophy
     /Cybersecurity is needed for every aspect of computer science!/
     - Websites           ->  Web security
     - Encrpted messaging ->  Crptography
     - Video games        ->  Binary exploitation, reverse-engineering

** Code of conduct
    [Computer Fraud and Abuse Act (CFAA)]
    - Attacking "protected" computers
    - Anywhere between a fine and TWENTY years in jail
    - If you don't have EXPLICIT permission to break into it, DON'T

** Opportunities
*** Capture the Flag (CTF)
    - Cybersecurity competition
    - Compete against other teams
    - "Jeopardy style" - hack the most (and hardest) things to win
    - The best way to practice your security knowledge!
    - We partipate in various CTFs hosted by other teams
    - Pwny CTF is our internal, 24/7/365 CTF with a leaderboard to compete with friends!
    */ctf.sigpwny.com/*
**** Fuzzing Team [NEM] 
     - Find vulnerabilities in programs and get bug bounties ($$$)
     - Use fuzz testing to automate uncovering bugs
     - Running over the course of the semester
     - Systems programming experience required
     - First meeting on *Saturday, September 2 at 11:00* (room TBA)
     - Message @rliu on Discord if interested
**** eCTF (Spring 2024)
     - Semester-long "Embedded CTF"
     - Design and hack embedded systems
     - Challenge changes every year
     -- Last year, it was a car and key fob system
     - Comes with 1 hour of credit!
**** UIUCTF (Spring/Summer 2024)
     - Our global CTF event for the larger security field
     - Design challenges for hundreds of people to solve
     - Show off what you've learned and give back to the security education community

* Week 1: Intro to Terminal and Setup (2023.09.03)
** What is a shell

** Getting into the shell
*** OS Differences + Different Shells
*** WSL or Virtual Machines
*** Installing WSL

** Starter commands
*** Networking
    - nc <<ip>> <<port>>: netcat, connect to ip on port port. (first commant - netcat)
    - ssh <user@ip> [port]: secure remote shell, run an instance of a shell as user at the IP address
    - ping <ip>: see if an IP address is up using ICMP (usually blocked by firewalls)
    - curl <url>: network access tool thal is mainly used access websites from the terminal
    - wget <url>: simplified/modern curl that downloads the file with relevant name
      *ssh bandit0@bandit.labs.overthewire.org -p 2220*

** Tools to install
   - netcat
   - ssh
   - curl
   - wget

* Week 2: Web Hacking I (2023.09.07)
** How websites work
*** The bones, skin, and brain of the internet
    *structure/style/interactivity* blah blah blah
    - HTML
    - CSS
    - JavaScript

** How the web works
*** Clients and servers
    - How clients (web browsers, typically) and servers work
    -- sending and receiving requests

** Cookies, local storage
*** 1. Cookies
    - Small pieces of information stored across visits to same site
    - Maintained by browser, sent along with requests
    - Main usages:
    -- Maintain a 'session' after you log in to a site
    -- Track you for advertising purposes
*** 2. Local Storage
    - Store key/value pairs like a cookie
    - /Not sent/ with requests to server
    -- Managed by JavaScript
    - Local storage can persist indefinetely
    - Session storage persists until the browser is closed

    <localStorage.setItem('sig', 'pwny'); -> localStorage.getItem('sig'); //pwny
    <sessionStorage.setItem('sig',  'pwny'); -> sessionStorage.getItem('sig'); //pwny

** Devtools
   - Devtools - Inspect Element
   - Devtools - Console
   - Devtools - Network
   - Devtools - Application

** Challenge walkthrough

